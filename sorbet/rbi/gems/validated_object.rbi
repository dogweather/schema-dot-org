# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: ignore
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/validated_object/all/validated_object.rbi
#
# validated_object-2.1.0

module ValidatedObject
end
class ValidatedObject::Base
  def __callbacks; end
  def __callbacks?; end
  def _run_validate_callbacks(&block); end
  def _validate_callbacks; end
  def _validators; end
  def _validators?; end
  def check_validations!(&blk); end
  def initialize(*args, &blk); end
  def model_name(**, &&); end
  def self.__callbacks; end
  def self.__callbacks=(val); end
  def self.__callbacks?; end
  def self._validate_callbacks; end
  def self._validate_callbacks=(value); end
  def self._validators; end
  def self._validators=(val); end
  def self._validators?; end
  def set_instance_variables(*args, &blk); end
  def validation_context; end
  def validation_context=(arg0); end
  extend ActiveModel::Callbacks
  extend ActiveModel::Naming
  extend ActiveModel::Translation
  extend ActiveModel::Validations::ClassMethods
  extend ActiveModel::Validations::HelperMethods
  extend ActiveSupport::Callbacks::ClassMethods
  extend ActiveSupport::DescendantsTracker
  extend T::Private::Methods::MethodHooks
  extend T::Private::Methods::SingletonMethodHooks
  extend T::Sig
  include ActiveModel::Validations
  include ActiveModel::Validations::HelperMethods
  include ActiveSupport::Callbacks
end
class ValidatedObject::Base::Boolean
end
class ValidatedObject::Base::TypeValidator < ActiveModel::EachValidator
  def boolean?(*args, &blk); end
  def expected_class?(*args, &blk); end
  def pseudo_boolean?(*args, &blk); end
  def save_error(*args, &blk); end
  def validate_each(*args, &blk); end
  extend T::Private::Methods::MethodHooks
  extend T::Private::Methods::SingletonMethodHooks
  extend T::Sig
end
